# Provision etherpad and caddy with docker-compose.
# See https://github.com/ether/etherpad-lite?tab=readme-ov-file#docker-compose
#
# Note: this is a template file which will not work standalone, all ${ENV_VARS} are substituted by Ansible.
services:
  etherpad:
    image: etherpad/etherpad:latest
    depends_on:
      - caddy
    ports:
      - "9001:9001"
    volumes:
      - etherpad-plugins:/opt/etherpad/src/plugin_packages
      - etherpad-var:/opt/etherpad/var
      - etherpad-db:/opt/etherpad/db
    environment:
      NODE_ENV: production
      DB_TYPE: sqlite
      DB_FILENAME: /opt/etherpad/db/db.sqlite
      ADMIN_PASSWORD: ${ROOT_PASSWORD}
      DEFAULT_PAD_TEXT: ""
      TRUST_PROXY: true
    user: "0:0"
    tty: true
    stdin_open: true
    restart: always

  grist:
    image: gristlabs/grist:latest
    depends_on:
      - caddy
    ports:
      - "8484:8484"
    volumes:
      - grist-data:/persist
    environment:
      APP_HOME_URL: https://sheets.${DOMAIN}
      GRIST_DEFAULT_EMAIL: ${ROOT_EMAIL}
      GRIST_SESSION_SECRET: ${ROOT_PASSWORD}
      GRIST_SANDBOX_FLAVOR: gvisor
      GRIST_SINGLE_ORG: ${ROOT_USERNAME}

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy-config:/config
      - caddy-data:/data
    configs:
      - source: caddyfile
        target: /etc/caddy/Caddyfile
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile"]
    restart: always

configs:
  caddyfile:
    content: |
      docs.${DOMAIN} {
        reverse_proxy etherpad:9001
        tls ${ROOT_EMAIL}
      }
      sheets.${DOMAIN} {
        reverse_proxy grist:8484
        tls ${ROOT_EMAIL}
      }

volumes:
  etherpad-plugins:
  etherpad-var:
  etherpad-db:

  grist-data:

  caddy-config:
  caddy-data:
